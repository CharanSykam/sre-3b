#ifndef _CAN_H
#define _CAN_H

#include "IO_Driver.h" 
#include "IO_CAN.h"

//Biggest number of can messages allowed to go into a FIFO queue at any one time
//TODO: Figure out the limit, make sure code doesn't try to make more
//TODO: Decide whether to declare the message array this way
//NOTE: The same message array is used for incoming and outgoing messages

//These should match
extern const ubyte1 canMessageLimit;
extern IO_CAN_DATA_FRAME canMessages[10]; //  = { { { 0 } } };

//These are our four FIFO queues.  All messages should come/go through one of these queues.
extern ubyte1 canFifoHandle_HiPri_Read;
extern ubyte1 canFifoHandle_HiPri_Write;
extern ubyte1 canFifoHandle_LoPri_Read;
extern ubyte1 canFifoHandle_LoPri_Write;

// Starting CAN address for all messages
// Note: CAN message address = canMessageBaseId_VCU + canMessageIdOffset
// Note: Assuming we only process input or output at any given time - not both simultaneously
extern const ubyte2 canMessageBaseId_VCU; // = 0x500;  //Default address for outgoing CAN messages (generated by VCU)
extern const ubyte2 canSpeed_Channel0;// = 500;
extern const ubyte2 canSpeed_Channel1;// = 250;

// canMessageIdOffset - Unique ID (address) for each CAN message, starting at
//                      CANBaseAddress.  Multiple sensors
//                can be assigned to a single ID/message if they'll fit in the
//                available data space
//                TODO: What's the limit?
//				  https://docs.google.com/spreadsheets/d/1sYXx191RtMq5Vp5PbPsq3BziWvESF9arZhEjYUMFO3Y/edit


//Functions
void broadcastSensorCanMessages(void);

#endif //  _CAN_H