#ifndef _CAN_H
#define _CAN_H

//Biggest number of can messages allowed to go into a FIFO queue at any one time
//TODO: Figure out the limit, make sure code doesn't try to make more
//TODO: Decide whether to declare the message array this way
//NOTE: The same message array is used for incoming and outgoing messages
const ubyte1 canMessageLimit = 10;

// canMessageBaseId - The starting CAN address for all messages
// Note: CAN message address = canMessageBaseId + canMessageIdOffset
// Note: Assuming we only process input or output at any given time - not both simultaneously
IO_CAN_DATA_FRAME canSensorMessages[canMessageLimit] = { { { 0 } } };

ubyte1 handle_fifo0_w; //This is the representation of the CAN FIFO write queue
ubyte1 handle_fifo0_r;
ubyte1 handle_fifo1_w;
ubyte1 handle_fifo1_r;

const ubyte2 canMessageBaseId = 0x500;  //Default address for outgoing CAN messages (generated by VCU)
const ubyte1 canSpeed_Channel0 = 500;
const ubyte1 canSpeed_Channel1 = 250;

// canMessageIdOffset - Unique ID (address) for each CAN message, starting at
//                      CANBaseAddress.  Multiple sensors
//                can be assigned to a single ID/message if they'll fit in the
//                available data space
//                TODO: What's the limit?
//				  https://docs.google.com/spreadsheets/d/1sYXx191RtMq5Vp5PbPsq3BziWvESF9arZhEjYUMFO3Y/edit


//Functions
void broadcastSensorCanMessages(void);

#endif //  _CAN_H